<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.cbkj_core.mapper.AdminInfoMapper">

  <resultMap id="BaseResultMap" type="com.example.cbkj_core.beans.AdminInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="name_zh" jdbcType="VARCHAR" property="nameZh" />
    <result column="user_heand" jdbcType="VARCHAR" property="userHeand" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>

  <resultMap id="lazyLoadRoles" type="com.example.cbkj_core.beans.AdminInfo" extends="BaseResultMap">
    <collection property="roles" ofType="com.example.cbkj_core.beans.AdminRule" select="getRolesByAdminId"
                column="id">
    </collection>
  </resultMap>

  <select id="getRolesByAdminId" resultType="AdminRule">
     select r.rid, r.rname, r.rdescr, r.create_date, r.admin_id adminId, r.rname_zh,r.index_url indexUrl from
     admin_info_rule ar,admin_rule r where ar.rid = r.rid AND ar.admin_id=#{id}

  </select>

  <sql id="Base_Column_List">
    id, name, password, sex, status, create_date, create_id, update_date, last_ip,phone,address,name_zh,user_heand,email
  </sql>


  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="lazyLoadRoles">
    select
    <include refid="Base_Column_List" />
    from admin_info
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from admin_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert"  parameterType="com.example.cbkj_core.beans.AdminInfo">
    insert into admin_info (id, name, password, 
      sex, status, create_date, 
      create_id, update_date, last_ip,phone,address,name_zh,user_heand,email
      )
    select #{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{sex,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},now(),
      #{createId,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{lastIp,jdbcType=VARCHAR}
      ,#{phone,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{nameZh,jdbcType=VARCHAR},#{userHeand,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR}
      FROM DUAL WHERE NOT EXISTS(SELECT name FROM admin_info WHERE name = #{name,jdbcType=VARCHAR} );
  </insert>
  <insert id="insertSelective" parameterType="com.example.cbkj_core.beans.AdminInfo">
    insert into admin_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="lastIp != null">
        last_ip,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="nameZh != null">
        name_zh,
      </if>
      <if test="userHeand != null">
        user_heand,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        #{lastIp,jdbcType=VARCHAR},
      </if>

      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="nameZh != null">
        #{nameZh,jdbcType=VARCHAR},
      </if>
      <if test="userHeand != null">
        #{userHeand,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.cbkj_core.beans.AdminInfo">
    update admin_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="nameZh != null">
        name_zh = #{nameZh,jdbcType=VARCHAR},
      </if>
      <if test="userHeand != null">
        user_heand = #{userHeand,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.cbkj_core.beans.AdminInfo">
    update admin_info a,`admin_info_rule` d ,(select count(1) cun from admin_info c where c.name = #{name} and c.id != #{id}) b
    set a.name = #{name,jdbcType=VARCHAR},
      a.sex = #{sex,jdbcType=VARCHAR},
      a.update_date = now(),
      a.phone = #{phone,jdbcType=VARCHAR},
      a.address = #{address,jdbcType=VARCHAR},
      a.name_zh = #{nameZh,jdbcType=VARCHAR},
      a.user_heand = #{userHeand,jdbcType=VARCHAR},
      a.email = #{email,jdbcType=VARCHAR},
      d.rid = #{rid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR} and b.cun = 0 and a.id = d.admin_id
  </update>


  <select id="loadUserByUsername" resultMap="lazyLoadRoles">
    select
    <include refid="Base_Column_List" />
    from admin_info
    where name = #{username}
  </select>

  <select id="getPageDatas" parameterType="AdminInfo" resultType="Map">
    SELECT a.id,a.name,a.password,a.sex,a.status,DATE_FORMAT(a.create_date,'%Y-%m-%d %h:%i:%s') create_date,a.create_id,a.update_date,a.last_ip
    ,a.phone,a.address,a.name_zh as nameZh,a.user_heand,a.email
    ,r.rname_zh rnamess,c.name createName FROM `admin_info` a
    ,admin_info_rule ar,admin_rule r,admin_info c  WHERE c.id = a.create_id AND a.id=ar.admin_id AND ar.rid = r.rid
     <if test="name != null">
       and a.name like CONCAT('%',#{name},'%')
     </if>

  </select>

  <select id="getRoles" resultType="Map">
     SELECT rid,rname_zh rnameZh from admin_rule

  </select>
  
  <insert id="insertAdminRule" parameterType="AdmininfoRule">

    insert into admin_info_rule (ir_id,rid,admin_id) VALUES (#{irID},#{rid},#{adminID})
  </insert>

  <update id="updatePwd" parameterType="Map">
      update admin_info set password = #{newPwd} where id in
      <foreach collection="ids" item="item" open="(" separator="," close=")"  >
          #{item}
      </foreach>
  </update>

  <update id="updateStatus" parameterType="Map">
      update admin_info set status = #{status} where id =#{id}

  </update>

  <delete id="deleteAdminRole" parameterType="ArrayList">

      delete from admin_info_rule where admin_id in
      <foreach collection="array" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
  </delete>

  <delete id="deleteBylis" parameterType="ArrayList">
      delete from admin_info where id in
      <foreach collection="array" item="item" open="(" separator="," close=")">
          #{item}
      </foreach>

  </delete>
</mapper>