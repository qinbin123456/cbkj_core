<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.cbkj_core.mapper.AdminInfoMapper">

  <resultMap id="BaseResultMap" type="com.example.cbkj_core.beans.AdminInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
  </resultMap>

  <resultMap id="lazyLoadRoles" type="com.example.cbkj_core.beans.AdminInfo" extends="BaseResultMap">
    <collection property="roles" ofType="com.example.cbkj_core.beans.AdminRule" select="getRolesByAdminId"
                column="id">
    </collection>
  </resultMap>

  <select id="getRolesByAdminId" resultType="AdminRule">
     select r.* from admin_info_rule ar,admin_rule r where ar.rid = r.rid AND ar.admin_id=#{id}

  </select>

  <sql id="Base_Column_List">
    id, name, password, sex, status, create_date, create_id, update_date, last_ip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from admin_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.cbkj_core.beans.AdminInfo">
    insert into admin_info (id, name, password, 
      sex, status, create_date, 
      create_id, update_date, last_ip
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{lastIp,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.cbkj_core.beans.AdminInfo">
    insert into admin_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="lastIp != null">
        last_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        #{lastIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.cbkj_core.beans.AdminInfo">
    update admin_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.cbkj_core.beans.AdminInfo">
    update admin_info
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      last_ip = #{lastIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="loadUserByUsername" resultMap="lazyLoadRoles">

    select
    <include refid="Base_Column_List" />
    from admin_info
    where name = #{username}
  </select>

  <select id="getPageDatas" parameterType="AdminInfo" resultType="Map">
    SELECT a.id,a.name,a.password,a.sex,a.status,a.create_date,a.create_id,a.update_date,a.last_ip
    ,GROUP_CONCAT(r.rname_zh) rnamess,c.name createName FROM `admin_info` a
    ,admin_info_rule ar,admin_rule r,admin_info c  WHERE c.id = a.create_id AND a.id=ar.admin_id AND ar.rid = r.rid
     <if test="name != null">
       and a.name like CONCAT('%',#{name},'%')

     </if>
     GROUP BY a.id

  </select>
</mapper>